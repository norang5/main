<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

   <!-- 중고장터 관련 SQL. myBatis용 -->
   
<!-- 	DAO에서 아래 SQL문의 아이디를 호출할때 혹시나 있을 중복아이디 방지를 위해
	다음과 같이 namespace명을 붙여 호출할 수 있다.
	
	@Autowired
	SqlSessionTemplate sessionTemplate;
	
	@RequestMapping("link")
	public void link(){
		List<자바 빈 명> list = sessionTemplate.selectList("com.shoes.model.HBean.2f");
	}
	
	그저 아이디 식별을 위해서만 쓰이다보니 사실상 namespace엔 없는 경로를 적어도 아무문제 없다.
 -->
<mapper namespace="com.shoes.dao.UsedTradeDao"> 

	<!-- 치수 목록 가져오기 -->
	<select id="getPrdtSizeList" resultType="PrdtSizeTbBean">
		SELECT * FROM PRDT_SIZE_TB
	</select>
	
	<!-- 지역 목록 가져오기 -->
	<select id="getDistrictList" resultType="DistrictTbBean">
		SELECT * FROM DISTRICT_TB
	</select>
	
	<!-- 중고거래 상태 목록 가져오기 -->
	<select id="getUsedTradeStList" resultType="UsedTradeStTbBean">
		SELECT * FROM USED_TRADE_ST_TB
	</select>
	
	<!-- 중고상품 상태 목록 가져오기 -->
	<select id="getUsedStList" resultType="UsedStTbBean">
		SELECT * FROM USED_ST_TB
	</select>
	
	<!-- 특정 식별번호의 중고거래 게시글 가져오기 -->
	<select id="getUsedTradePostTb" parameterType="int" resultType="UsedTradePostTbBean">
		SELECT * FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</select>
	
	<!-- 특정 식별번호의 신고횟수만 가져오기 -->
	<select id="getUsedTradePostTbUtpNotifyNumber" parameterType="int" resultType="int">
		SELECT UTP_NOTIFY_NUMBER
		FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</select>
	
	<!-- USED_TRADE_POST_TB로부터 특정범위의 레코드 받아오기 -->
	<select id="getUsedTradePostTbList" parameterType="java.util.Map" resultType="UsedTradePostTbBean">
		SELECT * FROM(
			SELECT	
				ROWNUM RNUM,
				UTP_SQ_PK,
				UTP_TITLE,
				UTP_BODY,
				UTP_REPORTING_DT,
				UTP_FIN_MODIF_DT,
				UTP_CNT,
				USED_TRADE_ST_PK,
				DISTRICT_PK,
				PRDT_SIZE_PK,
				USED_ST_GRADE_PK,
				MEM_EMAIL_PK,
				UTP_NOTIFY_NUMBER
			FROM(
				SELECT * FROM USED_TRADE_POST_TB
				ORDER BY  UTP_SQ_PK DESC
			)
		)WHERE RNUM <![CDATA[>=]]> #{startrow} AND RNUM <![CDATA[<=]]> #{endrow}
	</select>
	
	<!-- 특정 식별번호의 중고거래 게시글에서 작성일만 받아오기 -->
	<!-- resultType엔 java.util.Date와 java.sql.Date 모두 사용 가능합니다.
		각 타입에 따라 사전정의된 MyBatis 내부의 핸들러 메소드가 동작해 알아서 변환을 진행합니다. -->
	<select id="getUsedTradePostTbUtpReportingDt" parameterType="int" resultType="java.sql.Date">
		SELECT UTP_REPORTING_DT FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</select>
	
	<!-- 특정 식별번호의 중고거래 게시글에서 MEM_EMAIL_PK값만 가져오기 -->
	<select id="getUsedTradePostTbMemEmailPk" parameterType="int" resultType="String">
		SELECT MEM_EMAIL_PK FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</select>
	
	<!-- USED_TRADE_POST_TB로부터 UTP_SQ_PK와 일치하는 레코드의 UTP_CNT(조회수)만 받아오기 -->
	<select id="getUsedTradePostTbUtpCnt" parameterType="int" resultType="int">
		SELECT UTP_CNT FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</select>
	
	<!-- USED_TRADE_POST_TB에서 전달된 UTP_SQ_PK와 일치하는 레코드 제거 -->
	<delete id="deleteUSedTradePostTbUtpSqPk" parameterType="int">
		DELETE FROM USED_TRADE_POST_TB
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</delete>
	
	<!-- 전달된 UsedTradePostTbBean의 UTP_SQ_PK와 일치하는 DB상의 레코드를 교체 -->
	<update id="updateUsedTradePostTb" parameterType="UsedTradePostTbBean">
		UPDATE USED_TRADE_POST_TB
		SET	UTP_TITLE = #{UTP_TITLE},
			UTP_BODY = #{UTP_BODY},
			UTP_REPORTING_DT = #{UTP_REPORTING_DT},
			UTP_FIN_MODIF_DT = #{UTP_FIN_MODIF_DT},
			MEM_EMAIL_PK = #{MEM_EMAIL_PK},
			UTP_CNT = #{UTP_CNT},
			USED_TRADE_ST_PK = #{USED_TRADE_ST_PK},
			DISTRICT_PK = #{DISTRICT_PK},
			PRDT_SIZE_PK = #{PRDT_SIZE_PK},
			USED_ST_GRADE_PK = #{USED_ST_GRADE_PK},
			UTP_NOTIFY_NUMBER = #{UTP_NOTIFY_NUMBER}
		WHERE UTP_SQ_PK = #{UTP_SQ_PK}
	</update>
	
	<!-- 전달된 UsedTradePostTbBean을 DB에 저장 -->
	<insert id="insertUsedTradePostTb" parameterType="UsedTradePostTbBean">
		INSERT INTO USED_TRADE_POST_TB(
			UTP_SQ_PK,
			UTP_TITLE,
			UTP_BODY,
			UTP_REPORTING_DT,
			UTP_FIN_MODIF_DT,
			MEM_EMAIL_PK,
			UTP_CNT,
			USED_TRADE_ST_PK,
			DISTRICT_PK,
			PRDT_SIZE_PK,
			USED_ST_GRADE_PK,
			UTP_NOTIFY_NUMBER
		)VALUES(
			USED_TRADE_POST_TB_SEQ.NEXTVAL,
			#{UTP_TITLE},
			#{UTP_BODY},
			#{UTP_REPORTING_DT},
			#{UTP_FIN_MODIF_DT},
			#{MEM_EMAIL_PK},
			#{UTP_CNT},
			#{USED_TRADE_ST_PK},
			#{DISTRICT_PK},
			#{PRDT_SIZE_PK},
			#{USED_ST_GRADE_PK},
			#{UTP_NOTIFY_NUMBER}
		)
	</insert>
	
	<select id="selectUsedTradePostTbList" parameterType="hashMap" resultType="hashMap">
		SELECT
			AAA.*
		FROM(
			SELECT
				COUNT(*) OVER() AS TOTAL_COUNT,
				AA.*
			FROM(
				SELECT
					ROW_NUMBER() OVER (ORDER BY UTP_SQ_PK DESC) RNUM,
					UTP_SQ_PK,
					UTP_TITLE,
					UTP_BODY,
					UTP_REPORTING_DT,
					UTP_FIN_MODIF_DT,
					UTP_CNT,
					USED_TRADE_ST_PK,
					DISTRICT_PK,
					PRDT_SIZE_PK,
					USED_ST_GRADE_PK,
					MEM_EMAIL_PK,
					UTP_NOTIFY_NUMBER
				FROM
					USED_TRADE_POST_TB
			) AA
		) AAA
		WHERE
			AAA.RNUM BETWEEN #{START} AND #{END}
	</select>
</mapper>

